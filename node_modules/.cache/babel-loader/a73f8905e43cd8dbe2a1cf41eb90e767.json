{"ast":null,"code":"var _jsxFileName = \"/home/shruti/Desktop/music1/src/components/Main.js\";\nimport React from 'react';\nimport '../App.css';\nlet flag = false;\nlet max = 9,\n    min = 1,\n    track = '',\n    image = '',\n    shuffle;\n\nclass Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playing: false,\n      currentTrack: '',\n      currentImage: '',\n      currentId: 1,\n      shuffle: false,\n      loop: false,\n      playwidth: 0\n    };\n\n    this.songHandler = id => {\n      let currentSong = '';\n      flag = true;\n\n      if (this.props.musicdata.length > 0) {\n        for (let i = 0; i < this.props.musicdata.length; i++) {\n          if (id === this.props.musicdata[i].id) {\n            currentSong = this.props.musicdata[i].file;\n            this.setState({\n              playing: true,\n              currentTrack: currentSong,\n              currentImage: this.props.musicdata[i].albumCover,\n              currentId: this.props.musicdata[i].id\n            });\n          }\n        }\n      }\n    };\n\n    this.shuffleHandler = () => {\n      flag = true;\n      let random = Math.floor(Math.random() * (+max - +min)) + +min;\n\n      if (this.props.musicdata.length > 0) {\n        this.setState({\n          playing: true,\n          currentTrack: this.props.musicdata[random - 1].file,\n          currentImage: this.props.musicdata[random - 1].albumCover,\n          currentId: this.props.musicdata[random - 1].id\n        });\n      }\n    };\n\n    this.prevsongHandler = () => {\n      let value = 0;\n\n      if (this.props.musicdata.length > 0) {\n        flag = true;\n\n        if (this.state.currentId > 1) {\n          value = this.state.currentId - 1;\n          track = this.props.musicdata[value - 1].file;\n          image = this.props.musicdata[value - 1].albumCover;\n          this.setState({\n            currentId: value,\n            playing: true,\n            currentTrack: track,\n            currentImage: image\n          });\n        } else if (this.state.currentId === 1) {\n          value = 8;\n          track = this.props.musicdata[value - 1].file;\n          image = this.props.musicdata[value - 1].albumCover;\n          this.setState({\n            currentId: value,\n            playing: true,\n            currentTrack: track,\n            currentImage: image\n          });\n        }\n      }\n    };\n\n    this.playpauseHandler = () => {\n      this.setState(prevState => ({\n        playing: !prevState.playing\n      }));\n    };\n\n    this.nextsongHandler = () => {\n      let value = 0;\n\n      if (this.props.musicdata.length > 0) {\n        flag = true;\n\n        if (this.state.currentId < 8) {\n          value = this.state.currentId + 1;\n          track = this.props.musicdata[value - 1].file;\n          image = this.props.musicdata[value - 1].albumCover;\n          this.setState({\n            currentId: value,\n            playing: true,\n            currentTrack: track,\n            currentImage: image\n          });\n        } else if (this.state.currentId === 8) {\n          value = 1;\n          track = this.props.musicdata[value - 1].file;\n          image = this.props.musicdata[value - 1].albumCover;\n          this.setState({\n            currentId: value,\n            playing: true,\n            currentTrack: track,\n            currentImage: image\n          });\n        }\n      }\n    };\n\n    this.loopHandler = () => {\n      this.setState(prevState => ({\n        currentId: prevState.currentId,\n        playing: true,\n        loop: !prevState.loop,\n        currentTrack: prevState.currentTrack,\n        currentImage: prevState.currentImage\n      }));\n    };\n\n    this.controlHandler = () => {\n      shuffle = this.state.shuffle;\n\n      if (!shuffle === true) {\n        this.shuffleHandler();\n      }\n\n      this.setState({\n        shuffle: !shuffle\n      });\n    };\n\n    this.prevHandler = () => {\n      if (this.state.shuffle === true && this.state.loop === false) {\n        this.shuffleHandler();\n      } else if (this.state.loop === true && this.state.shuffle === false) {\n        this.loopHandler();\n      } else {\n        this.prevsongHandler();\n      }\n    };\n\n    this.nextHandler = () => {\n      if (this.state.shuffle === true && this.state.loop === false) {\n        this.shuffleHandler();\n      } else if (this.state.loop === true && this.state.shuffle === false) {\n        this.loopHandler();\n      } else {\n        this.nextsongHandler();\n      }\n    };\n\n    this.timeupdate = () => {\n      /*let playhead = (event.target.currentTime / event.target.duration) * 100;\n       /*this.setState({\n           currentTime: event.target.currentTime,\n           duration: event.target.duration\n       })*/\n      //console.log(playwidth);\n\n      /*this.setState({\n          playwidth:playhead\n      })*/\n      //pbar = <div className=\"pbar\" style={{width:this.state.playwidth}}></div>\n      const audio = document.querySelector('audio');\n      const pbar = document.querySelector('.pbar');\n      const percent = audio.currentTime / audio.duration * 100;\n      pbar.style.width = \"\".concat(percent, \"%\");\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.currentTrack) {\n      this.player.src = this.state.currentTrack;\n      this.player.play();\n    }\n\n    if (this.state.playing) {\n      if (this.state.currentTrack === '') {\n        this.player.src = this.props.musicdata[0].file;\n        this.player.play();\n      } else {\n        this.player.src = this.state.currentTrack;\n        this.player.play();\n      }\n    } else {\n      this.player.pause();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftSide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bigimagesec\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, flag === true ? React.createElement(\"img\", {\n      src: this.state.currentImage,\n      alt: \"\",\n      className: \"bigimage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: this.props.musicdata.length > 0 ? this.props.musicdata[0].albumCover : '',\n      alt: \"\",\n      className: \"bigimage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"audiosection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      ref: ref => this.player = ref,\n      src: \"#\",\n      onTimeUpdate: this.timeupdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"playerwrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pbar\",\n      style: {\n        width: isNaN(this.state.playwidth) ? \"1%\" : this.state.playwidth\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"controllersec\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: [\"fa\", \"fa-random\", \"shuffle\"].join(\" \"),\n      onClick: this.controlHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: [\"fas\", \"fa-angle-left\", \"previous\"].join(\" \"),\n      onClick: this.prevHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), this.state.playing === false ? React.createElement(\"i\", {\n      className: [\"fa\", \"fa-play\", \"playpause\"].join(\" \"),\n      onClick: this.playpauseHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      className: [\"fa\", \"fa-pause\", \"playpause\"].join(\" \"),\n      onClick: this.playpauseHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: [\"fas\", \"fa-angle-right\", \"next\"].join(\" \"),\n      onClick: this.nextHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: [\"fas\", \"fa-undo\", \"loop\"].join(\" \"),\n      onClick: this.loopHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"rightSide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, this.props.musicdata === null || this.props.musicdata.length === 0 ? [] : this.props.musicdata.map(item => {\n      return React.createElement(\"div\", {\n        className: \"musiccard\",\n        key: item.id,\n        onClick: () => {\n          this.songHandler(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"imgsec\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: item.albumCover,\n        alt: \"\",\n        className: \"miniimage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"songdetail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"songheading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, item.track), React.createElement(\"p\", {\n        className: \"artistheading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, item.artist)));\n    })));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/shruti/Desktop/music1/src/components/Main.js"],"names":["React","flag","max","min","track","image","shuffle","Main","Component","state","playing","currentTrack","currentImage","currentId","loop","playwidth","songHandler","id","currentSong","props","musicdata","length","i","file","setState","albumCover","shuffleHandler","random","Math","floor","prevsongHandler","value","playpauseHandler","prevState","nextsongHandler","loopHandler","controlHandler","prevHandler","nextHandler","timeupdate","audio","document","querySelector","pbar","percent","currentTime","duration","style","width","componentDidUpdate","player","src","play","pause","render","ref","isNaN","join","map","item","artist"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css';\nlet flag = false;\nlet max = 9, min = 1, track='',image='',shuffle;\nclass Main extends React.Component{\n    state = {\n        playing: false,\n        currentTrack: '',\n        currentImage: '',\n        currentId: 1,\n        shuffle:false,\n        loop: false,\n        playwidth:0\n    }\n    componentDidUpdate(){\n        if(this.state.currentTrack) {\n            this.player.src = this.state.currentTrack;\n            this.player.play()\n        }\n        if(this.state.playing){\n            if(this.state.currentTrack === ''){\n                this.player.src = this.props.musicdata[0].file;\n                this.player.play();\n            }else{\n            this.player.src = this.state.currentTrack;\n            this.player.play();\n            }\n        }else{\n            this.player.pause();\n        }\n    }\n    songHandler = (id) => {\n        let currentSong = '';\n        flag = true;\n        if(this.props.musicdata.length > 0){\n            for(let i = 0; i < this.props.musicdata.length; i++){\n                if(id === this.props.musicdata[i].id){\n                    currentSong = this.props.musicdata[i].file;\n                    this.setState({\n                        playing:true,\n                        currentTrack: currentSong,\n                        currentImage: this.props.musicdata[i].albumCover,\n                        currentId: this.props.musicdata[i].id\n                    });\n                }\n            }\n        }\n    }\n    shuffleHandler = () => {\n        flag = true;\n        let random = Math.floor(Math.random() * (+max - +min)) + +min;\n        if(this.props.musicdata.length > 0){\n            this.setState({\n                playing: true,\n                currentTrack: this.props.musicdata[random - 1].file,\n                currentImage: this.props.musicdata[random - 1].albumCover,\n                currentId: this.props.musicdata[random - 1].id\n            })\n        }\n    }\n    prevsongHandler = () => {\n        let value = 0;\n        if(this.props.musicdata.length > 0){\n            flag = true;\n            if(this.state.currentId > 1){\n                value = this.state.currentId -1;\n                track = this.props.musicdata[value - 1].file;\n                image = this.props.musicdata[value - 1].albumCover;\n                this.setState({\n                    currentId: value,\n                    playing: true,\n                    currentTrack: track,\n                    currentImage: image\n                })\n            }else if(this.state.currentId === 1){\n                value = 8\n                track = this.props.musicdata[value - 1].file;\n                image = this.props.musicdata[value - 1].albumCover;\n                this.setState({\n                    currentId: value,\n                    playing: true,\n                    currentTrack: track,\n                    currentImage: image\n                });\n            }   \n        }\n    }\n    playpauseHandler = () => {\n        this.setState((prevState) => ({\n            playing: !prevState.playing\n        }));\n    }\n    nextsongHandler = () => {\n        let value = 0;\n        if(this.props.musicdata.length > 0){\n            flag = true;\n            if(this.state.currentId < 8){\n                value = this.state.currentId + 1;\n                track = this.props.musicdata[value-1].file;\n                image = this.props.musicdata[value-1].albumCover;\n                this.setState({\n                    currentId: value,\n                    playing: true,\n                    currentTrack: track,\n                    currentImage: image\n                })\n            }else if(this.state.currentId === 8){\n                value = 1\n                track = this.props.musicdata[value - 1].file;\n                image = this.props.musicdata[value - 1].albumCover;\n                this.setState({\n                    currentId: value,\n                    playing: true,\n                    currentTrack: track,\n                    currentImage: image\n                });\n            }   \n        }\n    }\n    loopHandler = () => {\n        this.setState((prevState) => ({\n            currentId: prevState.currentId,\n            playing: true,\n            loop: !prevState.loop,\n            currentTrack: prevState.currentTrack,\n            currentImage: prevState.currentImage\n        }));\n    }\n    controlHandler = () => {\n        shuffle=this.state.shuffle;\n        if(!shuffle === true){\n            this.shuffleHandler();\n        }\n        this.setState({\n            shuffle: !shuffle\n        })\n    }\n    prevHandler = () => {\n        if(this.state.shuffle === true && this.state.loop === false){\n            this.shuffleHandler();\n        }else if(this.state.loop === true && this.state.shuffle === false){\n            this.loopHandler();\n        }else{\n            this.prevsongHandler();\n        }\n    }\n    nextHandler = () => {\n        if(this.state.shuffle === true && this.state.loop === false){\n            this.shuffleHandler();\n        }else if(this.state.loop === true && this.state.shuffle === false){\n            this.loopHandler();\n        }else{\n            this.nextsongHandler();\n        }\n    }\n    timeupdate = () => {\n       /*let playhead = (event.target.currentTime / event.target.duration) * 100;\n        /*this.setState({\n            currentTime: event.target.currentTime,\n            duration: event.target.duration\n        })*/\n        //console.log(playwidth);\n        /*this.setState({\n            playwidth:playhead\n        })*/\n        //pbar = <div className=\"pbar\" style={{width:this.state.playwidth}}></div>\n        const audio = document.querySelector('audio');\n        const pbar = document.querySelector('.pbar');\n        const percent = (audio.currentTime / audio.duration) * 100;\n        pbar.style.width = `${percent}%`;\n    }\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"leftSide\">\n                    <div className=\"bigimagesec\">\n                      { flag === true ? <img src = {this.state.currentImage} alt='' className=\"bigimage\"/> : <img src = {this.props.musicdata.length>0?this.props.musicdata[0].albumCover:''} alt='' className=\"bigimage\"/> }\n                    </div>\n                    <div className=\"audiosection\">\n                        <audio ref={ref => this.player = ref} src=\"#\" onTimeUpdate={this.timeupdate}/>\n                        <div className=\"playerwrapper\">\n                            <div className=\"pbar\" style={{width:isNaN(this.state.playwidth)?`1%`:this.state.playwidth}}></div>\n                        </div>\n                        <div className=\"controllersec\">\n\n                            <i className={[\"fa\", \"fa-random\", \"shuffle\"].join(\" \")} onClick={this.controlHandler}></i>\n\n                            <i className={[\"fas\", \"fa-angle-left\",\"previous\"].join(\" \")} onClick={this.prevHandler}></i>\n\n                            {this.state.playing === false ? <i className={[\"fa\", \"fa-play\", \"playpause\"].join(\" \")} onClick={this.playpauseHandler}></i> : <i className={[\"fa\", \"fa-pause\", \"playpause\"].join(\" \")} onClick={this.playpauseHandler}></i>}\n\n                            <i className={[\"fas\", \"fa-angle-right\", \"next\"].join(\" \")} onClick={this.nextHandler}></i>\n\n                            <i className={[\"fas\", \"fa-undo\", \"loop\"].join(\" \")} onClick={this.loopHandler}></i>\n\n                        </div>\n                    </div>\n                </div>\n                <div className=\"rightSide\">\n                    {\n                        this.props.musicdata === null || this.props.musicdata.length === 0 ? [] : this.props.musicdata.map(item => {\n                            return(\n                                <div className=\"musiccard\" key={item.id} onClick={() => {this.songHandler(item.id)}}>\n                                    <div className=\"imgsec\">\n                                        <img src={item.albumCover} alt='' className=\"miniimage\"/>\n                                    </div>\n                                    <div className=\"songdetail\">\n                                        <h3 className=\"songheading\">{item.track}</h3>\n                                        <p className=\"artistheading\">{item.artist}</p>\n                                    </div>\n                                </div>\n                            );\n                        }) \n                    }\n                </div>\n            </div>\n        )\n    }\n}\nexport default Main;"]},"metadata":{},"sourceType":"module"}